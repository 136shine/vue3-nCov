{"remainingRequest":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/ts-loader/index.js??ref--13-1!/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mi/XProjects/vue3/vue3-ncov/src/pages/home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mi/XProjects/vue3/vue3-ncov/src/pages/home.vue","mtime":1582255941367},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgX19hc3NpZ24sIF9fYXdhaXRlciwgX19nZW5lcmF0b3IgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IGNyZWF0ZUNvbXBvbmVudCwgcmVhY3RpdmUsIG9uTW91bnRlZCB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKaW1wb3J0IHsgZ2V0Q2hpbmFKc29uLCBnZXRQcm92aW5jZUpzb24sIGdldFZpcnVzRGF0YSB9IGZyb20gJ0Avc2VydmljZS9BUEknOwppbXBvcnQgcHJvdmluY2VNYXAgZnJvbSAnQC9kYXRhL3Byb3ZpbmNlLW1hcCc7CmltcG9ydCBIb3RNYXAgZnJvbSAnQC9jb21wb25lbnRzL2hvdE1hcC52dWUnOwpleHBvcnQgZGVmYXVsdCBjcmVhdGVDb21wb25lbnQoewogICAgY29tcG9uZW50czogewogICAgICAgIEhvdE1hcDogSG90TWFwCiAgICB9LAogICAgc2V0dXA6IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAgIHZhciBwcm92aW5jZUxpc3QgPSBbeyBsYWJlbDogJ+WFqOWbvScsIHZhbHVlOiAn5YWo5Zu9JyB9XTsKICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gT2JqZWN0LmtleXMocHJvdmluY2VNYXApOyBfaSA8IF9hLmxlbmd0aDsgX2krKykgewogICAgICAgICAgICB2YXIgdmFsID0gX2FbX2ldOwogICAgICAgICAgICBwcm92aW5jZUxpc3QucHVzaCh7CiAgICAgICAgICAgICAgICBsYWJlbDogdmFsLAogICAgICAgICAgICAgICAgdmFsdWU6IHZhbAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgdmFyIG9yaWdpbiA9IHsKICAgICAgICAgICAgbWFwVGl0bGU6ICcnLAogICAgICAgICAgICBtYXBUeXBlOiAn5YWo5Zu9JywKICAgICAgICAgICAgbWFwTGlzdDogW10sCiAgICAgICAgICAgIHByb3ZpbmNlTGlzdDogcHJvdmluY2VMaXN0LAogICAgICAgICAgICBtYXBEYXRhOiB7fQogICAgICAgIH07CiAgICAgICAgdmFyIHN0YXRlID0gcmVhY3RpdmUob3JpZ2luKTsKICAgICAgICAvLyBtZXRob2RzCiAgICAgICAgdmFyIGdldE1hcERhdGEgPSBmdW5jdGlvbiAobWFwVHlwZSkgeyByZXR1cm4gX19hd2FpdGVyKF90aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgbWFwRGF0YSwgX2E7CiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2IpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2IubGFiZWwpIHsKICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKG1hcFR5cGUgPT09ICflhajlm70nKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIGdldENoaW5hSnNvbigpXTsKICAgICAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICAgICAgICAgIF9hID0gX2Iuc2VudCgpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTsKICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbNCAvKnlpZWxkKi8sIGdldFByb3ZpbmNlSnNvbihwcm92aW5jZU1hcFttYXBUeXBlXSldOwogICAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICAgICAgX2EgPSBfYi5zZW50KCk7CiAgICAgICAgICAgICAgICAgICAgICAgIF9iLmxhYmVsID0gNDsKICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgIG1hcERhdGEgPSBfYTsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUubWFwRGF0YSA9IG1hcERhdGEuZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9KTsgfTsKICAgICAgICB2YXIgZ2V0TWFwTGlzdCA9IGZ1bmN0aW9uIChtYXBUeXBlKSB7IHJldHVybiBfX2F3YWl0ZXIoX3RoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciByZXMsIF9hLCBjb2RlLCBuZXdzbGlzdCwgY2l0aWVzXzE7CiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2IpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2IubGFiZWwpIHsKICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIGdldFZpcnVzRGF0YSgpXTsKICAgICAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9IF9iLnNlbnQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgX2EgPSByZXMuZGF0YSwgY29kZSA9IF9hLmNvZGUsIG5ld3NsaXN0ID0gX2EubmV3c2xpc3Q7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllc18xID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdzbGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ucHJvdmluY2VTaG9ydE5hbWUgPT09IG1hcFR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzXzEgPSBpdGVtLmNpdGllczsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcHJvdmluY2VOYW1lID0gaXRlbS5wcm92aW5jZVNob3J0TmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2l0aWVzXzEubGVuZ3RoICE9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUubWFwTGlzdCA9IGNpdGllc18xLm1hcChmdW5jdGlvbiAoY2l0eSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX19hc3NpZ24oeyBuYW1lOiBjaXR5LmNpdHlOYW1lLCB2YWx1ZTogY2l0eS5jb25maXJtZWRDb3VudCB9LCBjaXR5KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLm1hcExpc3QgPSBuZXdzbGlzdC5tYXAoZnVuY3Rpb24gKHByb3ZpbmNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfX2Fzc2lnbih7IG5hbWU6IHByb3ZpbmNlLnByb3ZpbmNlU2hvcnROYW1lLCB2YWx1ZTogcHJvdmluY2UuY29uZmlybWVkQ291bnQgfSwgcHJvdmluY2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7IH07CiAgICAgICAgdmFyIGluaXQgPSBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICAgIGdldE1hcERhdGEodmFsKTsKICAgICAgICAgICAgZ2V0TWFwTGlzdCh2YWwpOwogICAgICAgIH07CiAgICAgICAgdmFyIGhhbmRsZUNoYW5nZVByb3ZpbmNlID0gZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICAgIGluaXQodmFsdWUpOwogICAgICAgIH07CiAgICAgICAgb25Nb3VudGVkKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaW5pdChzdGF0ZS5tYXBUeXBlKTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzdGF0ZTogc3RhdGUsCiAgICAgICAgICAgIGhhbmRsZUNoYW5nZVByb3ZpbmNlOiBoYW5kbGVDaGFuZ2VQcm92aW5jZQogICAgICAgIH07CiAgICB9Cn0pOwo="},{"version":3,"file":"/home/mi/XProjects/vue3/vue3-ncov/src/pages/home.vue.ts","sourceRoot":"","sources":["/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mi/XProjects/vue3/vue3-ncov/src/pages/home.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { createComponent, reactive, onMounted } from '@vue/composition-api'\nimport { getChinaJson, getProvinceJson, getVirusData } from '@/service/API'\nimport provinceMap from '@/data/province-map'\nimport HotMap from '@/components/hotMap.vue'\n\ninterface HomeState {\n    mapTitle: string;\n    mapType: string; // 地图类型, 省份or全国\n    mapList: any[];\n    provinceList: any[];\n    mapData: {};\n}\ninterface ProvinceOptItem {\n    label: string;\n    value: string;\n}\n\nexport default createComponent({\n    components: {\n        HotMap\n    },\n    setup() {\n        const provinceList: ProvinceOptItem[] = [{label: '全国', value: '全国'}]\n        for (const val of Object.keys(provinceMap)) {\n            provinceList.push({\n                label: val,\n                value: val\n            })\n        }\n\n        const origin: HomeState = {\n            mapTitle: '',\n            mapType: '全国',\n            mapList: [],\n            provinceList,\n            mapData: {}\n        }\n        const state = reactive(origin)\n\n        // methods\n        const getMapData = async (mapType: string) => {\n            const mapData = mapType === '全国' ? await getChinaJson() : await getProvinceJson(provinceMap[mapType])\n            state.mapData = mapData.data\n        }\n\n        const getMapList = async (mapType: string) => {\n            const res = await getVirusData()\n            const { code, newslist } = res.data\n\n            if (code === 200) {\n                let cities: any[] = []\n                newslist.forEach((item: any) => {\n                    if (item.provinceShortName === mapType) {\n                        cities = item.cities\n                        // provinceName = item.provinceShortName\n                        return\n                    }\n                })\n                if (cities.length !== 0) {\n                    state.mapList = cities.map((city: any) => {\n                        return {\n                            name: city.cityName,\n                            value: city.confirmedCount,\n                            ...city\n                        }\n                    })\n                } else {\n                    state.mapList = newslist.map((province: any) => {\n                        return {\n                            name: province.provinceShortName,\n                            value: province.confirmedCount,\n                            ...province\n                        }\n                    })\n                }\n            }\n        }\n\n        const init = (val: string) => {\n            getMapData(val)\n            getMapList(val)\n        }\n\n        const handleChangeProvince = (value: string) => {\n            init(value)\n        }\n\n        onMounted (() => {\n            init(state.mapType)\n        })\n\n        return {\n            state, \n            handleChangeProvince\n        }\n    }\n})\n"]}]}