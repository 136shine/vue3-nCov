{"remainingRequest":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mi/XProjects/vue3/vue3-ncov/src/components/hotMap.vue?vue&type=style&index=0&id=b8613742&scoped=true&lang=css&","dependencies":[{"path":"/home/mi/XProjects/vue3/vue3-ncov/src/components/hotMap.vue","mtime":1582256991923},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYXAgewogIGhlaWdodDogNTAwcHg7CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKfQo="},{"version":3,"sources":["hotMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA","file":"hotMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"map\" ref=\"map\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { createComponent, watch } from '@vue/composition-api'\n// import { getChinaJson, getProvinceJson } from '@/service/API'~\n// import provinceMap from '@/data/province-map'\nimport Echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/map'\nimport 'echarts/lib/component/visualMap'\nimport 'echarts/lib/component/tooltip'\n\n\ninterface EchartOption {\n  seriesData: any;\n  seriesName: string | undefined;\n  mapType: string;\n  zoom: string;\n}\nexport default createComponent({\n  name: 'hotMap',\n  props: {\n    data: Array,\n    mapType: {\n      type: String,\n      default: 'china'\n    },\n    mapTitle: String,\n    mapData: Object\n  },\n  setup(props, context) {\n    console.log(props)\n    const setOptions = (options: EchartOption) => {\n       return {\n        tooltip: {\n          show: true,\n          formatter: function(params: any) {\n            let tip = ''\n            if (params.data) {\n              tip =\n                params.name +\n                '：<br>确诊：' +\n                params.data['value'] +\n                '例<br>死亡：' +\n                params.data['deadCount'] +\n                '例<br>治愈：' +\n                params.data['curedCount'] +\n                '例'\n            }\n            return tip\n          }\n        },\n        visualMap: {\n          show: true,\n          type: 'piecewise',\n          min: 0,\n          max: 2000,\n          align: 'right',\n          top: '2%',\n          right: 0,\n          left: 'center',\n          inRange: {\n            color: ['#ffc0b1', '#ff8c71', '#ef1717', '#9c0505']\n          },\n          pieces: [\n            { min: 1000 },\n            { min: 500, max: 999 },\n            { min: 100, max: 499 },\n            { min: 10, max: 99 },\n            { min: 1, max: 9 }\n          ],\n          orient: 'horizontal',\n          showLabel: true,\n          padding: 5,\n          text: ['高', '低'],\n          itemWidth: 10,\n          itemHeight: 10,\n          textStyle: {\n            fontSize: 10\n          }\n        },\n        series: [\n          {\n            left: 'center',\n            type: 'map',\n            name: options.seriesName,\n            // silent: province ? true : false,\n            label: {\n              show: true,\n              position: 'inside',\n              // margin: 8,\n              fontSize: 6\n            },\n            mapType: options.mapType,\n            data: options.seriesData,\n            zoom: options.zoom,\n            roam: false,\n            showLegendSymbol: false,\n            rippleEffect: {\n              show: true,\n              brushType: 'stroke',\n              scale: 2.5,\n              period: 4\n            }\n          }\n        ]\n      }\n    }\n\n    watch(async () => {\n      const {mapTitle, mapType, data, mapData}  = props\n      // init map\n      const echartMap = Echarts.init(context.refs.map)\n      Echarts.registerMap(mapType, mapData!)\n\n      const options: EchartOption = {\n        seriesData: data,\n        seriesName: mapTitle,\n        zoom: mapType === 'china' ? '1.1' : '1.2',\n        mapType\n      }\n      \n      echartMap.setOption(setOptions(options))\n    })\n  }\n})\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.map {\n  height: 500px;\n  width: 100%;\n  background-color: #fff;\n}\n</style>"]}]}