{"remainingRequest":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mi/XProjects/vue3/vue3-ncov/src/components/hotMap.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mi/XProjects/vue3/vue3-ncov/src/components/hotMap.vue","mtime":1582256991923},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgppbXBvcnQgeyBjcmVhdGVDb21wb25lbnQsIHdhdGNoIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknCi8vIGltcG9ydCB7IGdldENoaW5hSnNvbiwgZ2V0UHJvdmluY2VKc29uIH0gZnJvbSAnQC9zZXJ2aWNlL0FQSSd+Ci8vIGltcG9ydCBwcm92aW5jZU1hcCBmcm9tICdAL2RhdGEvcHJvdmluY2UtbWFwJwppbXBvcnQgRWNoYXJ0cyBmcm9tICdlY2hhcnRzL2xpYi9lY2hhcnRzJwppbXBvcnQgJ2VjaGFydHMvbGliL2NoYXJ0L21hcCcKaW1wb3J0ICdlY2hhcnRzL2xpYi9jb21wb25lbnQvdmlzdWFsTWFwJwppbXBvcnQgJ2VjaGFydHMvbGliL2NvbXBvbmVudC90b29sdGlwJwoKCmludGVyZmFjZSBFY2hhcnRPcHRpb24gewogIHNlcmllc0RhdGE6IGFueTsKICBzZXJpZXNOYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgbWFwVHlwZTogc3RyaW5nOwogIHpvb206IHN0cmluZzsKfQpleHBvcnQgZGVmYXVsdCBjcmVhdGVDb21wb25lbnQoewogIG5hbWU6ICdob3RNYXAnLAogIHByb3BzOiB7CiAgICBkYXRhOiBBcnJheSwKICAgIG1hcFR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY2hpbmEnCiAgICB9LAogICAgbWFwVGl0bGU6IFN0cmluZywKICAgIG1hcERhdGE6IE9iamVjdAogIH0sCiAgc2V0dXAocHJvcHMsIGNvbnRleHQpIHsKICAgIGNvbnNvbGUubG9nKHByb3BzKQogICAgY29uc3Qgc2V0T3B0aW9ucyA9IChvcHRpb25zOiBFY2hhcnRPcHRpb24pID0+IHsKICAgICAgIHJldHVybiB7CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24ocGFyYW1zOiBhbnkpIHsKICAgICAgICAgICAgbGV0IHRpcCA9ICcnCiAgICAgICAgICAgIGlmIChwYXJhbXMuZGF0YSkgewogICAgICAgICAgICAgIHRpcCA9CiAgICAgICAgICAgICAgICBwYXJhbXMubmFtZSArCiAgICAgICAgICAgICAgICAn77yaPGJyPuehruiviu+8micgKwogICAgICAgICAgICAgICAgcGFyYW1zLmRhdGFbJ3ZhbHVlJ10gKwogICAgICAgICAgICAgICAgJ+S+izxicj7mrbvkuqHvvJonICsKICAgICAgICAgICAgICAgIHBhcmFtcy5kYXRhWydkZWFkQ291bnQnXSArCiAgICAgICAgICAgICAgICAn5L6LPGJyPuayu+aEiO+8micgKwogICAgICAgICAgICAgICAgcGFyYW1zLmRhdGFbJ2N1cmVkQ291bnQnXSArCiAgICAgICAgICAgICAgICAn5L6LJwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aXAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHZpc3VhbE1hcDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIHR5cGU6ICdwaWVjZXdpc2UnLAogICAgICAgICAgbWluOiAwLAogICAgICAgICAgbWF4OiAyMDAwLAogICAgICAgICAgYWxpZ246ICdyaWdodCcsCiAgICAgICAgICB0b3A6ICcyJScsCiAgICAgICAgICByaWdodDogMCwKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgaW5SYW5nZTogewogICAgICAgICAgICBjb2xvcjogWycjZmZjMGIxJywgJyNmZjhjNzEnLCAnI2VmMTcxNycsICcjOWMwNTA1J10KICAgICAgICAgIH0sCiAgICAgICAgICBwaWVjZXM6IFsKICAgICAgICAgICAgeyBtaW46IDEwMDAgfSwKICAgICAgICAgICAgeyBtaW46IDUwMCwgbWF4OiA5OTkgfSwKICAgICAgICAgICAgeyBtaW46IDEwMCwgbWF4OiA0OTkgfSwKICAgICAgICAgICAgeyBtaW46IDEwLCBtYXg6IDk5IH0sCiAgICAgICAgICAgIHsgbWluOiAxLCBtYXg6IDkgfQogICAgICAgICAgXSwKICAgICAgICAgIG9yaWVudDogJ2hvcml6b250YWwnLAogICAgICAgICAgc2hvd0xhYmVsOiB0cnVlLAogICAgICAgICAgcGFkZGluZzogNSwKICAgICAgICAgIHRleHQ6IFsn6auYJywgJ+S9jiddLAogICAgICAgICAgaXRlbVdpZHRoOiAxMCwKICAgICAgICAgIGl0ZW1IZWlnaHQ6IDEwLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRTaXplOiAxMAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgICB0eXBlOiAnbWFwJywKICAgICAgICAgICAgbmFtZTogb3B0aW9ucy5zZXJpZXNOYW1lLAogICAgICAgICAgICAvLyBzaWxlbnQ6IHByb3ZpbmNlID8gdHJ1ZSA6IGZhbHNlLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgcG9zaXRpb246ICdpbnNpZGUnLAogICAgICAgICAgICAgIC8vIG1hcmdpbjogOCwKICAgICAgICAgICAgICBmb250U2l6ZTogNgogICAgICAgICAgICB9LAogICAgICAgICAgICBtYXBUeXBlOiBvcHRpb25zLm1hcFR5cGUsCiAgICAgICAgICAgIGRhdGE6IG9wdGlvbnMuc2VyaWVzRGF0YSwKICAgICAgICAgICAgem9vbTogb3B0aW9ucy56b29tLAogICAgICAgICAgICByb2FtOiBmYWxzZSwKICAgICAgICAgICAgc2hvd0xlZ2VuZFN5bWJvbDogZmFsc2UsCiAgICAgICAgICAgIHJpcHBsZUVmZmVjdDogewogICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgYnJ1c2hUeXBlOiAnc3Ryb2tlJywKICAgICAgICAgICAgICBzY2FsZTogMi41LAogICAgICAgICAgICAgIHBlcmlvZDogNAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICB9CgogICAgd2F0Y2goYXN5bmMgKCkgPT4gewogICAgICBjb25zdCB7bWFwVGl0bGUsIG1hcFR5cGUsIGRhdGEsIG1hcERhdGF9ICA9IHByb3BzCiAgICAgIC8vIGluaXQgbWFwCiAgICAgIGNvbnN0IGVjaGFydE1hcCA9IEVjaGFydHMuaW5pdChjb250ZXh0LnJlZnMubWFwKQogICAgICBFY2hhcnRzLnJlZ2lzdGVyTWFwKG1hcFR5cGUsIG1hcERhdGEhKQoKICAgICAgY29uc3Qgb3B0aW9uczogRWNoYXJ0T3B0aW9uID0gewogICAgICAgIHNlcmllc0RhdGE6IGRhdGEsCiAgICAgICAgc2VyaWVzTmFtZTogbWFwVGl0bGUsCiAgICAgICAgem9vbTogbWFwVHlwZSA9PT0gJ2NoaW5hJyA/ICcxLjEnIDogJzEuMicsCiAgICAgICAgbWFwVHlwZQogICAgICB9CiAgICAgIAogICAgICBlY2hhcnRNYXAuc2V0T3B0aW9uKHNldE9wdGlvbnMob3B0aW9ucykpCiAgICB9KQogIH0KfSkKCgo="},{"version":3,"sources":["hotMap.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"hotMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"map\" ref=\"map\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { createComponent, watch } from '@vue/composition-api'\n// import { getChinaJson, getProvinceJson } from '@/service/API'~\n// import provinceMap from '@/data/province-map'\nimport Echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/map'\nimport 'echarts/lib/component/visualMap'\nimport 'echarts/lib/component/tooltip'\n\n\ninterface EchartOption {\n  seriesData: any;\n  seriesName: string | undefined;\n  mapType: string;\n  zoom: string;\n}\nexport default createComponent({\n  name: 'hotMap',\n  props: {\n    data: Array,\n    mapType: {\n      type: String,\n      default: 'china'\n    },\n    mapTitle: String,\n    mapData: Object\n  },\n  setup(props, context) {\n    console.log(props)\n    const setOptions = (options: EchartOption) => {\n       return {\n        tooltip: {\n          show: true,\n          formatter: function(params: any) {\n            let tip = ''\n            if (params.data) {\n              tip =\n                params.name +\n                '：<br>确诊：' +\n                params.data['value'] +\n                '例<br>死亡：' +\n                params.data['deadCount'] +\n                '例<br>治愈：' +\n                params.data['curedCount'] +\n                '例'\n            }\n            return tip\n          }\n        },\n        visualMap: {\n          show: true,\n          type: 'piecewise',\n          min: 0,\n          max: 2000,\n          align: 'right',\n          top: '2%',\n          right: 0,\n          left: 'center',\n          inRange: {\n            color: ['#ffc0b1', '#ff8c71', '#ef1717', '#9c0505']\n          },\n          pieces: [\n            { min: 1000 },\n            { min: 500, max: 999 },\n            { min: 100, max: 499 },\n            { min: 10, max: 99 },\n            { min: 1, max: 9 }\n          ],\n          orient: 'horizontal',\n          showLabel: true,\n          padding: 5,\n          text: ['高', '低'],\n          itemWidth: 10,\n          itemHeight: 10,\n          textStyle: {\n            fontSize: 10\n          }\n        },\n        series: [\n          {\n            left: 'center',\n            type: 'map',\n            name: options.seriesName,\n            // silent: province ? true : false,\n            label: {\n              show: true,\n              position: 'inside',\n              // margin: 8,\n              fontSize: 6\n            },\n            mapType: options.mapType,\n            data: options.seriesData,\n            zoom: options.zoom,\n            roam: false,\n            showLegendSymbol: false,\n            rippleEffect: {\n              show: true,\n              brushType: 'stroke',\n              scale: 2.5,\n              period: 4\n            }\n          }\n        ]\n      }\n    }\n\n    watch(async () => {\n      const {mapTitle, mapType, data, mapData}  = props\n      // init map\n      const echartMap = Echarts.init(context.refs.map)\n      Echarts.registerMap(mapType, mapData!)\n\n      const options: EchartOption = {\n        seriesData: data,\n        seriesName: mapTitle,\n        zoom: mapType === 'china' ? '1.1' : '1.2',\n        mapType\n      }\n      \n      echartMap.setOption(setOptions(options))\n    })\n  }\n})\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.map {\n  height: 500px;\n  width: 100%;\n  background-color: #fff;\n}\n</style>"]}]}