{"remainingRequest":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mi/XProjects/vue3/vue3-ncov/src/pages/home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mi/XProjects/vue3/vue3-ncov/src/pages/home.vue","mtime":1582255941367},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mi/XProjects/vue3/vue3-ncov/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBjcmVhdGVDb21wb25lbnQsIHJlYWN0aXZlLCBvbk1vdW50ZWQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaScKaW1wb3J0IHsgZ2V0Q2hpbmFKc29uLCBnZXRQcm92aW5jZUpzb24sIGdldFZpcnVzRGF0YSB9IGZyb20gJ0Avc2VydmljZS9BUEknCmltcG9ydCBwcm92aW5jZU1hcCBmcm9tICdAL2RhdGEvcHJvdmluY2UtbWFwJwppbXBvcnQgSG90TWFwIGZyb20gJ0AvY29tcG9uZW50cy9ob3RNYXAudnVlJwoKaW50ZXJmYWNlIEhvbWVTdGF0ZSB7CiAgICBtYXBUaXRsZTogc3RyaW5nOwogICAgbWFwVHlwZTogc3RyaW5nOyAvLyDlnLDlm77nsbvlnossIOecgeS7vW9y5YWo5Zu9CiAgICBtYXBMaXN0OiBhbnlbXTsKICAgIHByb3ZpbmNlTGlzdDogYW55W107CiAgICBtYXBEYXRhOiB7fTsKfQppbnRlcmZhY2UgUHJvdmluY2VPcHRJdGVtIHsKICAgIGxhYmVsOiBzdHJpbmc7CiAgICB2YWx1ZTogc3RyaW5nOwp9CgpleHBvcnQgZGVmYXVsdCBjcmVhdGVDb21wb25lbnQoewogICAgY29tcG9uZW50czogewogICAgICAgIEhvdE1hcAogICAgfSwKICAgIHNldHVwKCkgewogICAgICAgIGNvbnN0IHByb3ZpbmNlTGlzdDogUHJvdmluY2VPcHRJdGVtW10gPSBbe2xhYmVsOiAn5YWo5Zu9JywgdmFsdWU6ICflhajlm70nfV0KICAgICAgICBmb3IgKGNvbnN0IHZhbCBvZiBPYmplY3Qua2V5cyhwcm92aW5jZU1hcCkpIHsKICAgICAgICAgICAgcHJvdmluY2VMaXN0LnB1c2goewogICAgICAgICAgICAgICAgbGFiZWw6IHZhbCwKICAgICAgICAgICAgICAgIHZhbHVlOiB2YWwKICAgICAgICAgICAgfSkKICAgICAgICB9CgogICAgICAgIGNvbnN0IG9yaWdpbjogSG9tZVN0YXRlID0gewogICAgICAgICAgICBtYXBUaXRsZTogJycsCiAgICAgICAgICAgIG1hcFR5cGU6ICflhajlm70nLAogICAgICAgICAgICBtYXBMaXN0OiBbXSwKICAgICAgICAgICAgcHJvdmluY2VMaXN0LAogICAgICAgICAgICBtYXBEYXRhOiB7fQogICAgICAgIH0KICAgICAgICBjb25zdCBzdGF0ZSA9IHJlYWN0aXZlKG9yaWdpbikKCiAgICAgICAgLy8gbWV0aG9kcwogICAgICAgIGNvbnN0IGdldE1hcERhdGEgPSBhc3luYyAobWFwVHlwZTogc3RyaW5nKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IG1hcERhdGEgPSBtYXBUeXBlID09PSAn5YWo5Zu9JyA/IGF3YWl0IGdldENoaW5hSnNvbigpIDogYXdhaXQgZ2V0UHJvdmluY2VKc29uKHByb3ZpbmNlTWFwW21hcFR5cGVdKQogICAgICAgICAgICBzdGF0ZS5tYXBEYXRhID0gbWFwRGF0YS5kYXRhCiAgICAgICAgfQoKICAgICAgICBjb25zdCBnZXRNYXBMaXN0ID0gYXN5bmMgKG1hcFR5cGU6IHN0cmluZykgPT4gewogICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRWaXJ1c0RhdGEoKQogICAgICAgICAgICBjb25zdCB7IGNvZGUsIG5ld3NsaXN0IH0gPSByZXMuZGF0YQoKICAgICAgICAgICAgaWYgKGNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgbGV0IGNpdGllczogYW55W10gPSBbXQogICAgICAgICAgICAgICAgbmV3c2xpc3QuZm9yRWFjaCgoaXRlbTogYW55KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ucHJvdmluY2VTaG9ydE5hbWUgPT09IG1hcFR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzID0gaXRlbS5jaXRpZXMKICAgICAgICAgICAgICAgICAgICAgICAgLy8gcHJvdmluY2VOYW1lID0gaXRlbS5wcm92aW5jZVNob3J0TmFtZQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgaWYgKGNpdGllcy5sZW5ndGggIT09IDApIHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZS5tYXBMaXN0ID0gY2l0aWVzLm1hcCgoY2l0eTogYW55KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBjaXR5LmNpdHlOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNpdHkuY29uZmlybWVkQ291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5jaXR5CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZS5tYXBMaXN0ID0gbmV3c2xpc3QubWFwKChwcm92aW5jZTogYW55KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm92aW5jZS5wcm92aW5jZVNob3J0TmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBwcm92aW5jZS5jb25maXJtZWRDb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLnByb3ZpbmNlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBjb25zdCBpbml0ID0gKHZhbDogc3RyaW5nKSA9PiB7CiAgICAgICAgICAgIGdldE1hcERhdGEodmFsKQogICAgICAgICAgICBnZXRNYXBMaXN0KHZhbCkKICAgICAgICB9CgogICAgICAgIGNvbnN0IGhhbmRsZUNoYW5nZVByb3ZpbmNlID0gKHZhbHVlOiBzdHJpbmcpID0+IHsKICAgICAgICAgICAgaW5pdCh2YWx1ZSkKICAgICAgICB9CgogICAgICAgIG9uTW91bnRlZCAoKCkgPT4gewogICAgICAgICAgICBpbml0KHN0YXRlLm1hcFR5cGUpCiAgICAgICAgfSkKCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc3RhdGUsIAogICAgICAgICAgICBoYW5kbGVDaGFuZ2VQcm92aW5jZQogICAgICAgIH0KICAgIH0KfSkK"},{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"wrap\">\n   <Tabs class=\"tabWrap\">\n       <TabPane label=\"疫情分布图\">\n           <h3>疫情分布图</h3>\n           <div class=\"selectWrap\">\n            <span>选择地区:</span><Select v-model=\"state.mapType\" style=\"width:200px\" @on-change=\"handleChangeProvince\">\n                <Option v-for=\"item in state.provinceList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n            </Select>\n           </div>\n           <hot-map :mapType=\"state.mapType\" :data=\"state.mapList\" :mapTitle=\"state.mapTitle\" :mapData=\"state.mapData\"></hot-map>\n       </TabPane>\n       <!-- <TabPane label=\"疫情趋势图\">\n           疫情趋势图\n       </TabPane> -->\n   </Tabs>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { createComponent, reactive, onMounted } from '@vue/composition-api'\nimport { getChinaJson, getProvinceJson, getVirusData } from '@/service/API'\nimport provinceMap from '@/data/province-map'\nimport HotMap from '@/components/hotMap.vue'\n\ninterface HomeState {\n    mapTitle: string;\n    mapType: string; // 地图类型, 省份or全国\n    mapList: any[];\n    provinceList: any[];\n    mapData: {};\n}\ninterface ProvinceOptItem {\n    label: string;\n    value: string;\n}\n\nexport default createComponent({\n    components: {\n        HotMap\n    },\n    setup() {\n        const provinceList: ProvinceOptItem[] = [{label: '全国', value: '全国'}]\n        for (const val of Object.keys(provinceMap)) {\n            provinceList.push({\n                label: val,\n                value: val\n            })\n        }\n\n        const origin: HomeState = {\n            mapTitle: '',\n            mapType: '全国',\n            mapList: [],\n            provinceList,\n            mapData: {}\n        }\n        const state = reactive(origin)\n\n        // methods\n        const getMapData = async (mapType: string) => {\n            const mapData = mapType === '全国' ? await getChinaJson() : await getProvinceJson(provinceMap[mapType])\n            state.mapData = mapData.data\n        }\n\n        const getMapList = async (mapType: string) => {\n            const res = await getVirusData()\n            const { code, newslist } = res.data\n\n            if (code === 200) {\n                let cities: any[] = []\n                newslist.forEach((item: any) => {\n                    if (item.provinceShortName === mapType) {\n                        cities = item.cities\n                        // provinceName = item.provinceShortName\n                        return\n                    }\n                })\n                if (cities.length !== 0) {\n                    state.mapList = cities.map((city: any) => {\n                        return {\n                            name: city.cityName,\n                            value: city.confirmedCount,\n                            ...city\n                        }\n                    })\n                } else {\n                    state.mapList = newslist.map((province: any) => {\n                        return {\n                            name: province.provinceShortName,\n                            value: province.confirmedCount,\n                            ...province\n                        }\n                    })\n                }\n            }\n        }\n\n        const init = (val: string) => {\n            getMapData(val)\n            getMapList(val)\n        }\n\n        const handleChangeProvince = (value: string) => {\n            init(value)\n        }\n\n        onMounted (() => {\n            init(state.mapType)\n        })\n\n        return {\n            state, \n            handleChangeProvince\n        }\n    }\n})\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.wrap {\n    height: 800px;\n}\n.tabWrap {\n    width: 100%;\n    height: 100%;\n}\n</style>\n"]}]}